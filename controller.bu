variant: fcos
version: 1.4.0
storage:
  files:
    - path: /etc/sysconfig/nftables.conf
      contents:
        inline: |
          #
          # This file will contain your nftables rules and
          # is read by the systemd service when restarting
          #
          # These provide an iptables like set of filters
          # (uncomment to include)
          # include "/etc/nftables/arp-filter.nft"
          # include "/etc/nftables/bridge-filter.nft"
          # include "/etc/nftables/inet-filter.nft"
          # include "/etc/nftables/ipv4-filter.nft"
          # include "/etc/nftables/ipv4-mangle.nft"
          # include "/etc/nftables/ipv4-nat.nft"
          # include "/etc/nftables/ipv4-raw.nft"
          # include "/etc/nftables/ipv6-filter.nft"
          # include "/etc/nftables/ipv6-mangle.nft"
          # include "/etc/nftables/ipv6-nat.nft"
          # include "/etc/nftables/ipv6-raw.nft"
          flush ruleset;

          table inet filter {
            chain input {
              type filter hook input priority 0; policy drop;

              ct state established,related accept;
              ct state invalid drop;

              iif lo accept;

              ip6 nexthdr icmpv6 icmpv6 type { destination-unreachable, packet-too-big, time-exceeded, parameter-problem, nd-router-advert, nd-neighbor-solicit, nd-neighbor-advert } accept;
              ip protocol icmp icmp type { destination-unreachable, router-advertisement, time-exceeded, parameter-problem } accept;

              ip6 nexthdr icmpv6 icmpv6 type echo-request limit rate 10/second accept;
              ip protocol icmp icmp type echo-request limit rate 10/second accept;

              # Allow SSH
              tcp dport ssh limit rate 15/minute accept;

              # Allow k0s controller
              tcp dport { 2380, 6443, 8132, 9443, 10250 } accept;
            }

            chain forward {
              type filter hook forward priority 0; policy drop;
            }

            chain output {
              type filter hook output priority 0; policy accept;
            }
          }
      mode: 0600
      overwrite: true
    - path: /etc/k0s/k0s.yaml
      contents:
        local: k0s.yaml
      mode: 0644
systemd:
  units:
    - name: setup-k0s.service
      enabled: true
      contents: |
        [Unit]
        Description=Setup k0s
        Wants=network-online.target
        After=network-online.target systemd-machine-id-commit.service
        ConditionPathExists=!/var/lib/setup-k0s.stamp

        [Service]
        Type=oneshot
        RemainAfterExit=yes
        ExecStart=/bin/sh -c "curl -sSLf https://get.k0s.sh | sh"
        ExecStart=/usr/local/bin/k0s install controller
        ExecStart=/usr/local/bin/k0s start
        ExecStart=/bin/touch /var/lib/setup-k0s.stamp

        [Install]
        WantedBy=multi-user.target
