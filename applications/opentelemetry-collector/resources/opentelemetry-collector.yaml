apiVersion: opentelemetry.io/v1beta1
kind: OpenTelemetryCollector

metadata:
  name: opentelemetry-collector

spec:
  config:
    receivers:
      haproxy:
        endpoint: http://haproxy-kubernetes-ingress.haproxy-controller.svc.materia-cluster.ggrel.net:1024/stats
      otlp:
        protocols:
          grpc:
            endpoint: 0.0.0.0:4317
          http:
            endpoint: 0.0.0.0:4318
      podman_stats:
        endpoint: unix://run/podman/podman.sock
      prometheus:
        config:
          global:
            scrape_interval: 15s
          scrape_configs:
            - job_name: apcupsd-exporter
              static_configs:
                - targets:
                    - service.apcupsd-exporter.svc.materia-cluster.ggrel.net:9162
            - job_name: cert-manager
              static_configs:
                - targets:
                    - cert-manager.cert-manager.svc.materia-cluster.ggrel.net:9402
            - job_name: haproxy-metrics
              static_configs:
                - targets:
                    - haproxy-kubernetes-ingress.haproxy-controller.svc.materia-cluster.ggrel.net:1024
            - job_name: otelcol
              static_configs:
                - targets: [0.0.0.0:8888]
              metric_relabel_configs:
                - source_labels: [__name__]
                  regex: ".*grpc_io.*"
                  action: drop
            - job_name: prometheus
              static_configs:
                - targets:
                    - service.prometheus.svc.materia-cluster.ggrel.net:9090
            - job_name: switchbot-meter
              scrape_interval: 1m
              metrics_path: /probe
              static_configs:
                - targets:
                    - CED37C9CA281
                    - D4DF46B693B1
                    - ED867D5919E9
              relabel_configs:
                - source_labels: [__address__]
                  target_label: __param_target
                - source_labels: [__param_target]
                  target_label: instance
                - target_label: __address__
                  replacement: service.switchbot-meter-exporter.svc.materia-cluster.ggrel.net:8888

    processors:
      batch:
        timeout: 1m
      resource/haproxy:
        attributes:
          - key: service.name
            value: haproxy
            action: insert
      resource/podman_stats:
        attributes:
          - key: service.name
            value: podman_stats
            action: insert

    exporters:
      debug:
        verbosity: detailed
      otlp/mackerel:
        endpoint: otlp.mackerelio.com:4317
        compression: gzip
        headers:
          Mackerel-Api-Key: ${env:MACKEREL_APIKEY}
      otlphttp/vaxila:
        endpoint: https://otlp-vaxila.mackerelio.com
        headers:
          Accept: "*/*"
          Mackerel-Api-Key: ${env:VAXILA_APIKEY}
      prometheusremotewrite:
        endpoint: http://service.prometheus.svc.materia-cluster.ggrel.net:9090/api/v1/write
        resource_to_telemetry_conversion:
          enabled: true

    service:
      telemetry:
        metrics:
          address: :8888
          level: detailed
      pipelines:
        metrics:
          receivers: [otlp, prometheus]
          processors: [batch]
          exporters: [otlp/mackerel, prometheusremotewrite]
        metrics/haproxy:
          receivers: [haproxy]
          processors: [resource/haproxy, batch]
          exporters: [otlp/mackerel, prometheusremotewrite]
        metrics/podman_stats:
          receivers: [podman_stats]
          processors: [resource/podman_stats, batch]
          exporters: [otlp/mackerel, prometheusremotewrite]
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlphttp/vaxila]
  managementState: managed
  envFrom:
    - secretRef:
        name: mackerel-apikey
    - secretRef:
        name: vaxila-apikey
  image: ghcr.io/open-telemetry/opentelemetry-collector-releases/opentelemetry-collector-contrib:0.110.0
  ipFamilies:
    - IPv4
    - IPv6
  ipFamilyPolicy: RequireDualStack
  volumeMounts:
    - name: podman-socket
      mountPath: /run/podman/podman.sock
  volumes:
    - name: podman-socket
      hostPath:
        path: /run/podman/podman.sock
        type: Socket
